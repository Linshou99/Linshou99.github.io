<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>report</title>
    <link href="/2023/07/13/report/"/>
    <url>/2023/07/13/report/</url>
    
    <content type="html"><![CDATA[<h1 id="数据科学与工程学院暑期夏令营实践项目报告"><a class="markdownIt-Anchor" href="#数据科学与工程学院暑期夏令营实践项目报告"></a> <strong>数据科学与工程学院暑期夏令营实践项目报告</strong></h1><table><thead><tr><th><strong>上机实践名称</strong>：基于 GitHub 的博客网站</th><th><strong>上机实践日期</strong>：2023.7.13</th></tr></thead><tbody><tr><td><strong>姓名</strong> ：陈沁文</td><td><strong>学号</strong> ：10205501409</td></tr></tbody></table><h2 id="一-实验目的"><a class="markdownIt-Anchor" href="#一-实验目的"></a> <strong>一、实验目的</strong></h2><ul><li>选择一个你喜欢的博客（最好从主题样式开始选择）推荐在 Jekyll 和 Hexo 之间选取。</li><li>注册 github 并使用 github 的代码仓库以及 pages 功能。</li><li>选取对应框架的教程文档，跟随教程完成部署并且填充内容。</li></ul><h2 id="二-实验环境"><a class="markdownIt-Anchor" href="#二-实验环境"></a> <strong>二、实验环境</strong></h2><p>Hexo</p><h2 id="三-实验过程"><a class="markdownIt-Anchor" href="#三-实验过程"></a> <strong>三、实验过程</strong></h2><p>选择了Hexo作为基础博客框架的实现，其次选择了fluid主题作为博客页面布局的基本设计，之后在此基础上进行了一些布局的优化和功能的丰富，以及美观上的调整。</p><h4 id="博客框架及其选取原因"><a class="markdownIt-Anchor" href="#博客框架及其选取原因"></a> 博客框架及其选取原因</h4><p>第一次使用博客，选取Hexo作为框架搭建。原因是Hexo是一个快速、简洁且高效的博客框架，基于 Node.js开发，使用 Markdown 解析文章，并生成静态页面，非常方便，且页面可直接存在GitHub Pages。</p><h4 id="博客主题及其选取原因"><a class="markdownIt-Anchor" href="#博客主题及其选取原因"></a> 博客主题及其选取原因</h4><p>博客主题选取fluid,这是因为他的页面布局设计简洁优雅，有助于使用者专注于博客写作，且提供大量定制化配置项，更具个性化。此外，该主题的文档写得非常地详细，查起来非常容易，上手快，适用于第一次上手写博客的小白。</p><h4 id="博客样式设计及其美学考量"><a class="markdownIt-Anchor" href="#博客样式设计及其美学考量"></a> 博客样式设计及其美学考量</h4><p>在fluid主题上做了些修改和完善。</p><h5 id="导航栏category添加下拉菜单"><a class="markdownIt-Anchor" href="#导航栏category添加下拉菜单"></a> 导航栏category添加下拉菜单</h5><p>原先需要切换到分类页面后才可以看到所有分类，于是在导航栏category处添加下拉菜单，显示所有当前分类，再直接选择某一分类，更为快捷方便。</p><ul><li>在主题配置文件中修改如下内容</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;category&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/categories/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-category-fill&quot;</span>,<br><span class="hljs-attr">submenu:</span> [<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;Blockchain&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/categories/Blockchain&quot;</span> &#125;,<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;Nonsense&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/categories/Nonsense&quot;</span> &#125;,<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;实验报告&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/categories/实验报告&quot;</span> &#125;<br>      ] &#125;<br></code></pre></td></tr></table></figure><ul><li>效果如图<br><img src="/2023/07/13/report/3.png" alt="1"></li></ul><h5 id="添加评论功能"><a class="markdownIt-Anchor" href="#添加评论功能"></a> 添加评论功能</h5><ul><li>安装基于 GitHub Issues的utterances评论插件</li><li>在主题配置文件中开启评论功能，并修改utterances相应参数配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment">#...</span><br><span class="hljs-attr">utterances:</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">Linshou99/Linshou99.github.io</span><br>  <span class="hljs-attr">issue_term:</span> <span class="hljs-string">title</span><br>  <span class="hljs-attr">label:</span> <span class="hljs-string">utterances</span><br>  <span class="hljs-attr">theme:</span> <span class="hljs-string">github-light</span><br>  <span class="hljs-attr">theme_dark:</span> <span class="hljs-string">github-dark</span><br>  <span class="hljs-attr">crossorigin:</span> <span class="hljs-string">anonymous</span><br></code></pre></td></tr></table></figure><ul><li>实现登录Github账户后可以在文章下进行评论功能<br><img src="/2023/07/13/report/2.png" alt="1"></li></ul><h5 id="数学公式支持"><a class="markdownIt-Anchor" href="#数学公式支持"></a> 数学公式支持</h5><p>由于 Hexo 默认的 Markdown 渲染器不支持复杂公式，于是完善对数学公式的支持。</p><ul><li>首先卸载原有的渲染器，更换渲染器katex,并安装hexo官方的hexo-math插件，可以让字体变得更好看</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">卸载原有的渲染器</span><br>npm un hexo-renderer-marked --save<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装渲染器katex</span><br>npm i hexo-renderer-markdown-it-plus --save<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装hexo-math</span><br>npm install hexo-math --save<br></code></pre></td></tr></table></figure><ul><li>再在博客根目录下的_config.yml站点配置文件的文末添加以下内容，修改渲染器名，加入hexo-math插件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">math:</span><br>  <span class="hljs-attr">engine:</span> <span class="hljs-string">katex</span><br>  <span class="hljs-attr">katex:</span><br>    <span class="hljs-attr">css:</span> <span class="hljs-string">https://fastly.jsdelivr.net/npm/katex@0.11.0/dist/katex.min.css</span><br>    <span class="hljs-attr">js:</span> <span class="hljs-string">https://fastly.jsdelivr.net/npm/katex@0.11.0/dist/katex.min.js</span><br>    <span class="hljs-attr">config:</span><br>      <span class="hljs-comment"># KaTeX config</span><br>      <span class="hljs-attr">throwOnError:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">errorColor:</span> <span class="hljs-string">&quot;#cc0000&quot;</span><br></code></pre></td></tr></table></figure><ul><li>最后在主题配置文件内修改并启动支持latex数学公式功能</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">math:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">katex</span><br></code></pre></td></tr></table></figure><ul><li>之后在需要加入数学公式的文章的Front-matter处添加一行math: true即可启用公式转换</li><li>效果显示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E=mc^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li></ul><h5 id="固定背景"><a class="markdownIt-Anchor" href="#固定背景"></a> 固定背景</h5><p>从美观角度考虑，在主题配置文件中更换banner图后，原先fluid主体下的banner背景图不是全屏，下拉背景会变为纯白，觉得有些单调，于是将背景固定。</p><ul><li>在博客根目录新建scripts文件夹，在该文件夹下新建injector.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">root</span>: siteRoot = <span class="hljs-string">&quot;/&quot;</span> &#125; = hexo.<span class="hljs-property">config</span>;<br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&quot;body_begin&quot;</span>, <span class="hljs-string">`&lt;div id=&quot;web_bg&quot;&gt;&lt;/div&gt;`</span>);<br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&quot;body_end&quot;</span>,<span class="hljs-string">`&lt;script src=&quot;<span class="hljs-subst">$&#123;siteRoot&#125;</span>js/backgroundize.js&quot;&gt;&lt;/script&gt;`</span>);<br></code></pre></td></tr></table></figure><ul><li>替换背景，在博客根目录下的/source下新建/js目录，以及在/js下新建backgroundize.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//更改背景图像：更改`web_bg`元素的背景图像为`.banner`元素的背景图像，并且它将被固定在整个窗口上方。</span><br><span class="hljs-variable language_">document</span><br>  .<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#web_bg&#x27;</span>)<br>  .<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">`background-image: <span class="hljs-subst">$&#123;<span class="hljs-variable language_">document</span>.querySelector(<span class="hljs-string">&#x27;.banner&#x27;</span>).style.background.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">0</span>]&#125;</span>;position: fixed;width: 100%;height: 100%;z-index: -1;background-size: cover;`</span>);<br><span class="hljs-comment">//移除背景图像：通过将`background-image`设置为`url()`，这里是空的，即没有指定具体的背景图像URL，使得`banner`元素的背景图像被移除。</span><br><span class="hljs-variable language_">document</span><br>  .<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;#banner&quot;</span>)<br>  .<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;background-image: url()&#x27;</span>)<br><span class="hljs-comment">//修改遮罩层的背景颜色：通过将`background-color`设置为`rgba(0,0,0,0)`，即完全透明的黑色，这将使`banner`元素的遮罩层的背景颜色变为透明。</span><br><span class="hljs-variable language_">document</span><br>  .<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;#banner .mask&quot;</span>)<br>  .<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;background-color:rgba(0,0,0,0)&#x27;</span>)<br></code></pre></td></tr></table></figure><h5 id="毛玻璃滤镜"><a class="markdownIt-Anchor" href="#毛玻璃滤镜"></a> 毛玻璃滤镜</h5><p>给用于显示内容的board板添加一层毛玻璃滤镜，模糊背景而不是纯色的效果使其与页面整体更协调、融合。</p><ul><li>在/themes/fluid/_config.yml修改背景色为透明</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 主面板背景色</span><br><span class="hljs-comment"># Color of main board</span><br><span class="hljs-attr">board_color:</span> <span class="hljs-string">&quot;#ffffff80&quot;</span><br><span class="hljs-attr">board_color_dark:</span> <span class="hljs-string">&quot;#00000080&quot;</span><br></code></pre></td></tr></table></figure><ul><li>在/themes/fluid/source/css下新建cloudedGlasses.css实现毛玻璃滤镜效果，即给board元素添加模糊背景效果，blur(5px)指定了模糊效果的强度。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#board</span> &#123;<br>  -webkit-backdrop-<span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">5px</span>);<br>  backdrop-<span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">5px</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>再回到/themes/fluid/_config.yml配置文件中引入该样式</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_css:</span> <br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/css/cloudedGlass.css</span><br></code></pre></td></tr></table></figure><ul><li>最后依据修改后的效果在主题配置文件中调整字体颜色，使内容明显，清晰可见。<br><img src="/2023/07/13/report/4.png" alt="1"></li></ul><p>注意，每次修改配置，都需要在bash命令行输入以下命令将修改内容部署到博客上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">清除缓存</span><br>hexo clean<br><span class="hljs-meta prompt_">#</span><span class="language-bash">生成静态文件并部署到仓库/网站中</span><br>hexo g --d<br></code></pre></td></tr></table></figure><h4 id="博客制作过程中遇到的问题及其解决方法"><a class="markdownIt-Anchor" href="#博客制作过程中遇到的问题及其解决方法"></a> 博客制作过程中遇到的问题及其解决方法</h4><p>在博客md文件中以相对路径插入图片，部署上去后图片无法显示，查看控制台发现是无法找到图片。<br><img src="/2023/07/13/report/5.png" alt="1"><br>解决方法：</p><ul><li>安装hexo-asset-image插件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install https://github.com/CodeFalling/hexo-asset-image --save<br></code></pre></td></tr></table></figure><ul><li>修改博客根目录下_config.yml文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><ul><li>创建新文件report</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo n report<br></code></pre></td></tr></table></figure><ul><li>此时在/source/_posts下还会生成同名文件夹report/，将图片（如img.jpg）放到该文件夹内，在md文件中按相对路径插入即可。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">![](./report/img.jpg)<br></code></pre></td></tr></table></figure><h2 id="四-总结与反思"><a class="markdownIt-Anchor" href="#四-总结与反思"></a> <strong>四、总结与反思</strong></h2><p>搭建个人博客网站是一个用来展示个人技术能力和分享知识、并与其他人进行交流的很好的方式。通过这次项目实践，我了解到GitHub Pages是一项免费的静态站点托管服务，它可以直接从 GitHub 上的仓库获取 HTML、CSS 和 JavaScript 文件，然后发布网站，因而我们搭建自己的博客网站并直接部署到GitHub上，省去购买独立服务器的成本。同时也熟悉了如何利用静态博客框架进行快速搭建。</p><p>此外，通过这次项目实践，我还感受到了开源项目的魅力。Hexo 是一个开源的静态博客生成工具，它在以下几个方面体现了开源项目的优势：</p><ol><li><p><strong>灵活性和可定制性</strong>：Hexo 的源代码是公开的，用户可以根据自己的需求进行修改和定制。用户可以自由地添加、删除或修改功能，以满足个人或组织的特定需求。这种灵活性和可定制性使得 Hexo 可以适应各种不同的博客需求和设计风格。比如说在实现背景固定和毛玻璃特效时使用的注入代码功能，可以在修改主题的时候将代码无侵入式加入到主题里，不会直接修改源码影响日后更新。</p></li><li><p><strong>活跃的社区支持</strong>：Hexo 有一个活跃的社区，由志愿者开发者和用户组成。这个社区提供了长期的支持和维护，确保 Hexo 的持续发展和改进。社区成员可以提供技术支持、解决问题、分享经验和贡献代码，使得 Hexo 的质量和功能得到不断提升。</p></li><li><p><strong>丰富的插件生态系统</strong>：Hexo 的开源性质促进了插件的开发和共享。Hexo 社区中有大量的插件可供选择，用于扩展 Hexo 的功能和增强用户体验。这些插件可以帮助用户实现各种功能，如在遇到文章无法显示图片报错时解决方法就是安装hexo-asset-image插件等，还有评论功能提供了更多的选择和灵活性。</p></li><li><p><strong>透明度和可信度</strong>：Hexo 的源代码是公开的，任何人都可以查看和审查代码。这使得用户可以对 Hexo 的功能和安全性进行自行验证，增加了用户对 Hexo 的信任度。用户可以通过检查源代码来确保没有潜在的安全漏洞或后门。</p></li><li><p><strong>降低成本和提高效率</strong>：Hexo 是一个免费的开源项目，用户可以免费获取和使用。这降低了使用 Hexo 的成本，同时也避免了从零开始开发一个静态博客生成工具的时间和资源投入。通过利用已有的开源项目，用户可以更快速地搭建和部署自己的博客。</p></li></ol><p>总的来说，Hexo 作为一个开源项目，在灵活性、社区支持、插件生态系统、透明度和成本效益等方面都展现了开源项目的优势。</p><p>基于以上，我完成了个人博客网站的第一次搭建和写作。反思就是更多的进阶的功能，比如留言板等还有待添加。</p>]]></content>
    
    
    <categories>
      
      <category>实验报告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实验报告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fabric_chaincode</title>
    <link href="/2023/05/04/fabric-chaincode/"/>
    <url>/2023/05/04/fabric-chaincode/</url>
    
    <content type="html"><![CDATA[<h1 id="peer-chaincode"><a class="markdownIt-Anchor" href="#peer-chaincode"></a> peer chaincode</h1><p><code>peer chaincode</code>命令允许管理员执行与一个节点上运行有关的链码，例如安装，实例化，调用，包装，查询和升级链码。</p><h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2><p><code>peer chaincode</code>命令有以下子命令：</p><ul><li>install</li><li>instantiate</li><li>invoke</li><li>list</li><li>package</li><li>query</li><li>signpackage</li><li>upgrade</li></ul><p>不同的子命令选项（安装，实例化）牵涉到与一个peer相关的不同链码操作。例如，用<code>peer chaincode install</code>子命令选项在节点上安装一个链码，或者用<code>peer chaincode query</code>子命令选项为一节点上账本的当前值查询链码。</p><p>本主题将描述每个节点链码子命令以及它们的选项。</p><h2 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h2><p>每个子命令都有一套专门对应各子命令的参数，以及一套涉及到所有<code>peer chaincode</code>子命令的全局参数。但并不是所有的子命令都会使用这些参数。比如，<code>query</code>子命令就不需要<code>--orderer</code>参数。</p><p>每个参数都会和与其相关的子命令一起来解析。全局参数包括</p><p>*<code>--cafile &lt;string&gt;</code></p><p>是通往一文件的路径，该文件包含了用于排序端点的PEM编码受信任证书</p><p>*<code>--certfile &lt;string&gt;</code></p><p>是通往一文件的路径，该文件包含了用于和orderer端点进行相互TLS通信的PEM编码X509公钥。</p><p>*<code>--keyfile &lt;string&gt;</code></p><p>是通往一文件的路径，该文件包含了用于和orderer端点进行相互TLS通信的PEM编码私钥</p><p>*<code>-o</code>or<code>--orderer &lt;string&gt;</code></p><p>排序服务端点被指明为<code>&lt;hostname or IP address&gt;:&lt;port&gt;</code></p><p>*<code>--ordererTLSHostnameOverride &lt;string&gt;</code></p><p>验证与orderer的TLS连接时要用到的主机名覆盖</p><p>*<code>--tls</code></p><p>当与orderer端点通信时用TLS</p><p>*<code>--transient &lt;string&gt;</code></p><p>JSON编码中的参数的瞬时映射</p>]]></content>
    
    
    <categories>
      
      <category>Blockchain</category>
      
    </categories>
    
    
    <tags>
      
      <tag>fabric</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>holiday</title>
    <link href="/2023/04/28/holiday/"/>
    <url>/2023/04/28/holiday/</url>
    
    <content type="html"><![CDATA[<p>放假了。</p>]]></content>
    
    
    <categories>
      
      <category>Nonsense</category>
      
    </categories>
    
    
    <tags>
      
      <tag>happy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/04/28/hello-world/"/>
    <url>/2023/04/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
